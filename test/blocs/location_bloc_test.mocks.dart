// Mocks generated by Mockito 5.3.2 from annotations
// in weather_stations/test/blocs/location_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:geolocator/geolocator.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_stations/domain/entities/no_params.dart' as _i6;
import 'package:weather_stations/domain/repositories/location_repository.dart'
    as _i2;
import 'package:weather_stations/domain/usecases/location_usecase.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocationRepository_0 extends _i1.SmartFake
    implements _i2.LocationRepository {
  _FakeLocationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_1 extends _i1.SmartFake implements _i3.Position {
  _FakePosition_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationUseCase extends _i1.Mock implements _i4.LocationUseCase {
  MockLocationUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LocationRepository get locationRepository => (super.noSuchMethod(
        Invocation.getter(#locationRepository),
        returnValue: _FakeLocationRepository_0(
          this,
          Invocation.getter(#locationRepository),
        ),
      ) as _i2.LocationRepository);
  @override
  _i5.Future<_i3.Position> call(_i6.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Position>.value(_FakePosition_1(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Position>);
}
